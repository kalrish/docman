---
AWSTemplateFormatVersion: '2010-09-09'


Description: Document storage and management.


Parameters:

   BucketName:
      Description: Name of the S3 bucket.
      Type: String

   RoleName:
      Description: Name of the IAM role.
      Type: String
      Default: documents-manager

   TrusteeArn:
      Description: ARN of the trustee.
      Type: String
      Default: arn:aws:iam::659664769788:user/david


Resources:

   Bucket:
      Type: AWS::S3::Bucket
      Properties: {
         BucketEncryption: {
            ServerSideEncryptionConfiguration: [
               {
                  ServerSideEncryptionByDefault: {
                     SSEAlgorithm: AES256,
                  },
               },
            ],
         },
         BucketName: {
            Ref: BucketName,
         },
         PublicAccessBlockConfiguration: {
            BlockPublicAcls: true,
            BlockPublicPolicy: true,
            IgnorePublicAcls: true,
            RestrictPublicBuckets: true,
         },
      }

   BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties: {
         Bucket: {
            Ref: Bucket,
         },
         PolicyDocument: {
            Version: '2012-10-17',
            Statement: [
               {
                  Sid: EnforceTagging,
                  Principal: '*',
                  Action: [
                     's3:PutObject',
                     's3:PutObjectTagging',
                  ],
                  Resource: [
                     {
                        'Fn::Sub': '${Bucket.Arn}/*',
                     },
                  ],
                  Condition: {
                     StringNotLike: {
                        'aws:userId': [
                           {
                              'Fn::Sub': '${DocumentsManager.RoleId}:*',
                           },
                        ],
                     },
                  },
                  Effect: Deny,
               },
               {
                  Sid: RestrictObjectStorageClasses,
                  Principal: '*',
                  Action: [
                     's3:PutObject',
                  ],
                  Resource: [
                     {
                        'Fn::Sub': '${Bucket.Arn}/*',
                     },
                  ],
                  Condition: {
                     StringNotEquals: {
                        's3:x-amz-storage-class': [
                           STANDARD,
                           STANDARD_IA,
                        ],
                     },
                  },
                  Effect: Deny,
               },
               {
                  Sid: PreventDamage,
                  Principal: '*',
                  Action: [
                     's3:DeleteObject',
                     's3:DeleteObjectTagging',
                     's3:DeleteObjectVersion',
                     's3:DeleteObjectVersionTagging',
                  ],
                  Resource: [
                     {
                        'Fn::Sub': '${Bucket.Arn}/*',
                     },
                  ],
                  Effect: Deny,
               },
            ],
         },
      }

   DocumentsManager:
      Type: AWS::IAM::Role
      Properties: {
         AssumeRolePolicyDocument: {
            Version: '2012-10-17',
            Statement: [
               {
                  Principal: {
                     AWS: [
                        {
                           Ref: TrusteeArn,
                        },
                     ],
                  },
                  Action: [
                     'sts:AssumeRole',
                  ],
                  Effect: Allow,
               },
            ],
         },
         Description: {
            'Fn::Sub': 'Manages documents in bucket ${Bucket}.',
         },
         RoleName: {
            Ref: RoleName,
         },
      }

   ReadPolicy:
      Type: AWS::IAM::Policy
      Properties: {
         PolicyName: read,
         PolicyDocument: {
            Version: '2012-10-17',
            Statement: [
               {
                  Sid: Bucket,
                  Action: [
                     's3:ListBucket',
                  ],
                  Resource: [
                     {
                        'Fn::GetAtt': [
                           Bucket,
                           Arn,
                        ],
                     },
                  ],
                  Effect: Allow,
               },
               {
                  Sid: Objects,
                  Action: [
                     's3:GetObject',
                     's3:GetObjectTagging',
                  ],
                  Resource: [
                     {
                        'Fn::Sub': '${Bucket.Arn}/*'
                     },
                  ],
                  Effect: Allow,
               },
            ],
         },
         Roles: [
            {
               Ref: DocumentsManager,
            },
         ],
      }

   WritePolicy:
      Type: AWS::IAM::Policy
      Properties: {
         PolicyName: write,
         PolicyDocument: {
            Version: '2012-10-17',
            Statement: [
            ],
         },
         Roles: [
            {
               Ref: DocumentsManager,
            },
         ],
      }
